version: "3.9"

services:
  api:
    image: registry.example.com/astrologer-api:latest
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy"
      - "traefik.http.routers.astrologer-api.rule=Host(`${TRAEFIK_DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.astrologer-api.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "traefik.http.routers.astrologer-api.tls.certresolver=le"
      - "traefik.http.routers.astrologer-api.middlewares=api-strip"
      - "traefik.http.middlewares.api-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.astrologer-ui.rule=Host(`${TRAEFIK_DOMAIN}`) && PathPrefix(`/ui`)"
      - "traefik.http.routers.astrologer-ui.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "traefik.http.routers.astrologer-ui.tls.certresolver=le"
      - "traefik.http.routers.astrologer-ui.middlewares=ui-strip"
      - "traefik.http.middlewares.ui-strip.stripprefix.prefixes=/ui"
      - "traefik.http.services.astrologer-api.loadbalancer.server.port=8000"
    networks:
      - reverse-proxy

  redis:
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - reverse-proxy

networks:
  reverse-proxy:
    external: true

volumes:
  redis-data:
